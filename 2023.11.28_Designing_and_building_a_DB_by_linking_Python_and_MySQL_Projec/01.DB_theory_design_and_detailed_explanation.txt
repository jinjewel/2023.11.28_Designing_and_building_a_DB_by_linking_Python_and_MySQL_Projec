DB의 목적
학과, 학생, 교수, 강의 등 기본적으로 수업을 듣는데 필요한 데이터들을 조회 가능하도록 했으며, 
추가적으로 교내에서 시행하는 교내대회 데이터를 추가하여 기본적인 대학교 DB구조에 좀더 복잡한 내용을 추가해보도록 함.

------------------------

각 테이블 설명

엔티티 테이블
1. 교내대회 엔티티는 여러 종류의 대회가 여러번의 회차를 가지고 개최가 되며, 한 명의 학생은 대회마다 한 번만 참여가 가능합니다.
또한, 교내대회를 개최하는 학과는 여러개가 존재할 수 있으며, 학과는 여러 개의 대회를 개최할 수 있습니다.
교내대회는 대회이름과 회차번호를 복합키로 사용하려 했으나, 관계 테이블을 작성할 때 정규화 과정을 거쳐 대회번호라는 일련번호 속성을 만들어 PK로 사용하게 되었습니다.
추가적으로 대회일시, 장소, 상금, 참가인원을 속성으로 가진다.

2. 학과 엔티티는 학과의 고유한ID를 가진다. (P.K = 학과ID), 학과는 여러 학생들과 여러 교수들에게 소속을 제공합니다.
하나의 학과에는 해당학과 이수모형에 존재하는 강좌, 즉 학과에서 열릴 수 있는 강좌들이 존재하며, 단일 혹은 여러 학과가 뭉쳐 교내대회를 개최할 수가 있습니다.
학과 엔티티는 다음과 같은 속성을 가집니다.

3. 이수모형 엔티티는 과목코드를 P.K로 가지며, 하나에 학과에 여러 개의 강의가 커리큘럼으로 만들어집니다.
학과에서 개설한 과목에 대해 다음과 같은 속성이 제공됩니다.

4. 강의 엔티티는 이수모형의 참조무결성 제약을 받으며, 약 엔티티로 표현을 한다.
각 학과 이수모형에 있는 강좌들이 연도와 학기에 맞춰 강의로 열리며, 일부의 과목은 분반을 사용하여 강의를 나누기 때문에 
다음과 같은 속성이 필요하다고 생각했습니다. 
초반 설계 과정에서 과목코드, 분반, 개설연도, 개설학기로 복합키를 설정하려 했으나, 
방금 보여드렸던 대회번호 속성과 같이 정규화를 거쳐 강의코드 속성을 만들고 PK로 부여해 사용하게 됬습니다. 

5. 학생 엔티티는 입학년도,전공학과ID,입학순서를 결합한 파생속성인 학번을 P.K로 가집니다.
한명의 학생은 전공으로 하나의 학과를 선택할 수 있으며, 전공의 종류를 통해 부전공, 다전공(복수전공, 융합전공 등)을 표시할 수 있습니다.
한명의 학생은 여러개의 강의를 선택하여 수강 할 수 있고, 다음과 같은 속성을 가집니다.

6. 교수 엔티티는 학과ID, 오신순서를 결합한 파생속성인 교수ID를 P.K로 가집니다.

관계 테이블
7. 개설 관계 엔티티는 위에 강의 엔티티에서 설명했던 내용으로 약 엔티티 관계를 나타내고 있습니다.
어떤 연도, 어떤 학기, 분반의 유무에 초점을 맞춰서 중복과 누락이 없도록 속성을 생각했습니다.

8. 수강 관계 엔티티는 한명의 학생이 하나의 강의를 들을 때, 
그 강의에서 받은 점수(출석점수, 과제점수, 중간고사점수와 기말고사점수)를 표시합니다.

9. 참가 관계 엔티티는 학생이 해당 교내대회의 참가인원을 넘지 않는 선에서 팀을 모아 지원가능한 것을 나타내며, 팀이름과 성적을 속성으로 가집니다.
학번과 대회번호의 외래키로 복합키를 설정하여 사용합니다.

10. 대회 주체 관계 엔티티는 교내 대회와  대회를 주체하는 학과를 연결하는 엔티티로 외래키 두개를 복합키로 설정하여 구성합니다.


11. 전공 관계는 학생이 전공 종류에 따라 하나 혹은 두개의 학과를 선택하는 것을 표시합니다.

-------------------------------

데이터 생성 방법
1. GPT 데이터 생성
2. 실제 대학교 내 학과, 전공 데이터
3. 엑셀 함수

--------------------------------

사용 프로그램
1. Python - VScode, Sypder
2. DB - MySQL Workbench
3. 데이터 전처리 - Excel, Access
4. ER모델 - 한글, Access

------------------------------------

엔티티
1. 교내대회
2. 학과
3. 이수모형
4. 강의
5. 학생
6. 교수

관계
7. 개설
8. 수강
9. 참가
10. 대회 주체





































